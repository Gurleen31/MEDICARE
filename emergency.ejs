<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title><%= title || "Medicare - Our Services" %></title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
    /* Previous styles remain the same until hero section */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Segoe UI', Arial, sans-serif;
    }

    body {
        background: linear-gradient(135deg, #f5f7fa 0%, #eef2f7 100%);
        min-height: 100vh;
    }

    /* Enhanced Top Bar */
    .top-bar {
            background: linear-gradient(90deg, #2563eb 0%, #1d4ed8 100%);
            color: white;
            padding: 12px 0;
            animation: slideDown 0.5s ease;
            font-size: 0.95rem;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .top-bar-content {
            display: flex;
            justify-content: space-between;
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 40px;
        }

    .contact-info {
        display: flex;
        gap: 30px;
    }

    .contact-info span {
        display: flex;
        align-items: center;
        gap: 8px;
        transition: transform 0.3s ease;
    }

    .contact-info span:hover {
        transform: translateY(-2px);
    }

    .auth-buttons {
        display: flex;
        gap: 25px;
    }

    .auth-buttons a {
        color: white;
        text-decoration: none;
        transition: all 0.3s ease;
        padding: 6px 20px;
        border-radius: 8px;
        font-weight: 500;
        background: rgba(255, 255, 255, 0.1);
    }

    .auth-buttons a:hover {
        background: rgba(255, 255, 255, 0.2);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    /* Enhanced Navigation */
    nav {
        padding: 20px 0;
        background: rgba(255, 255, 255, 0.98);
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        position: relative;
        animation: slideDown 0.5s ease 0.2s backwards;
    }

    .nav-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 40px;
    }

    .logo {
        font-size: 32px;
        font-weight: bold;
        background: linear-gradient(45deg, #2563eb, #1d4ed8);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        text-decoration: none;
        transition: all 0.3s ease;
        letter-spacing: -0.5px;
        position: relative;
    }

    .logo::after {
        content: 'âš•';
        position: absolute;
        top: -5px;
        right: -20px;
        font-size: 24px;
        color: #2563eb;
    }

    .logo:hover {
        transform: scale(1.05);
        filter: brightness(1.2);
    }

    .nav-links {
        display: flex;
        gap: 40px;
        align-items: center;
    }

    .nav-links a {
        text-decoration: none;
        color: #333;
        position: relative;
        padding: 5px 0;
        transition: all 0.3s ease;
        font-weight: 500;
        font-size: 1.05rem;
    }

    .nav-links a::after {
        content: '';
        position: absolute;
        bottom: -2px;
        left: 0;
        width: 0;
        height: 2.5px;
        background: #2563eb;
        transition: width 0.3s ease;
        border-radius: 2px;
    }

    .nav-links a:hover {
        color: #2563eb;
    }

    .nav-links a:hover::after {
        width: 100%;
    }

    .appointment-btn {
            background: linear-gradient(45deg, #067e2a, #0fad64);
            color: white !important;
            padding: 12px 28px !important;
            border-radius: 30px;
            transition: all 0.3s ease !important;
            box-shadow: 0 4px 15px rgba(37, 155, 106, 0.2);
        }

        .appointment-btn:hover {
            transform: translateY(-2px) !important;
            box-shadow: 0 8px 25px rgba(37, 155, 106, 0.3);
            background: linear-gradient(45deg, #0fad64, #0d8d4d);
        }

    .appointment-btn::after {
        display: none;
    }


    /* Hero Section */
    .hero {
        min-height: calc(100vh - 135px);
        background: linear-gradient(135deg, #ffffff 0%, #f0f4f8 100%);
        position: relative;
        overflow: hidden;
        animation: fadeIn 1s ease;
        display: flex;
        align-items: center;
        padding: 80px 0;
    }

    .hero-content {
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 40px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 60px;
    }

    .hero-text {
        flex: 1;
        max-width: 600px;
        animation: slideRight 1s ease;
    }

    .welcome-text {
        color: #2563eb;
        text-transform: uppercase;
        letter-spacing: 2px;
        font-weight: 600;
        font-size: 1rem;
        margin-bottom: 20px;
        display: inline-block;
        padding: 8px 16px;
        background: rgba(37, 99, 235, 0.1);
        border-radius: 20px;
    }

    .hero-title {
        font-size: 3.5rem;
        color: #111827;
        margin-bottom: 25px;
        line-height: 1.2;
        font-weight: 700;
    }

    .hero-description {
        color: #4b5563;
        font-size: 1.1rem;
        line-height: 1.8;
        margin-bottom: 40px;
    }

    .cta-button {
        display: inline-block;
        background: linear-gradient(45deg, #2563eb, #1d4ed8);
        color: white;
        padding: 16px 36px;
        border-radius: 30px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(37, 99, 235, 0.2);
    }

    .cta-button:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(37, 99, 235, 0.3);
        background: linear-gradient(45deg, #1d4ed8, #1e40af);
    }

    .hero-image {
        flex: 1;
        position: relative;
        animation: slideLeft 1s ease;
    }

    .hero-image img {
        width: 100%;
        max-width: 600px;
        border-radius: 30px;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
        transition: transform 0.5s ease;
    }

    .hero-image::after {
        content: '';
        position: absolute;
        top: 20px;
        right: 20px;
        width: 100%;
        height: 100%;
        background: #2563eb;
        border-radius: 30px;
        z-index: -1;
        opacity: 0.1;
    }

    /* New Services Section Styles */
    .services-section {
        padding: 100px 0;
        /* background-color #ffffff; */
    }

    .services-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 40px;
        display: flex;
        gap: 60px;
    }

    .services-left {
        flex: 2;
    }

    .services-right {
        flex: 1;
    }

    .section-title {
        font-size: 48px;
        color: #111827;
        margin-bottom: 60px;
        font-weight: 700;
    }

    .services-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 40px;
    }

    .service-card {
        display: flex;
        gap: 25px;
        padding: 30px;
        background: #fff;
        border-radius: 15px;
        transition: all 0.3s ease;
        border: 1px solid #e5e7eb;
    }

    .service-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        border-color: #2563eb;
    }

    .service-icon {
        width: 70px;
        height: 70px;
        background: #fff1f2;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
    }

    .service-icon i {
        font-size: 28px;
        color: #f43f5e;
    }

    .service-content h3 {
        font-size: 20px;
        color: #111827;
        margin-bottom: 12px;
        font-weight: 600;
    }

    .service-content p {
        color: #6b7280;
        line-height: 1.6;
        font-size: 0.95rem;
    }

    /* Consultation Form Styles */
    .consultation-form {
        background: #ffffff;
        padding: 40px;
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    }

    .form-title {
        color: #2563eb;
        font-size: 24px;
        text-align: center;
        margin-bottom: 30px;
        font-weight: 600;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-control {
        width: 100%;
        padding: 15px 20px;
        border: 1px solid #e5e7eb;
        border-radius: 10px;
        font-size: 16px;
        transition: all 0.3s ease;
    }

    .form-control:focus {
        outline: none;
        border-color: #2563eb;
        box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
    }

    textarea.form-control {
        height: 120px;
        resize: vertical;
    }

    .submit-btn {
        width: 100%;
        padding: 15px;
        background: linear-gradient(45deg, #2563eb, #1d4ed8);
        color: white;
        border: none;
        border-radius: 10px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .submit-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(37, 99, 235, 0.2);
    }

    /* Responsive Styles */
    @media (max-width: 1200px) {
        .services-grid {
            gap: 30px;
        }
    }

    @media (max-width: 992px) {
        .services-container {
            flex-direction: column;
        }
        .services-grid {
            grid-template-columns: 1fr;
        }
    }

    @media (max-width: 768px) {
        .section-title {
            font-size: 36px;
        }
        .services-container {
            padding: 0 20px;
        }
    }

    @media (max-width: 576px) {
        .service-card {
            flex-direction: column;
            align-items: center;
            text-align: center;
        }
    }
</style>
</head>
<body>

    <!-- Navigation Bar -->
<nav>
  <div class="nav-content">
    <a href="/" class="logo">Medicare</a>
    <div class="nav-links">
      <a href="/">Home</a>
      <a href="/about">About</a>
      <a href="/department">Department</a>
      <a href="/doctor">Doctors</a>
      <a href="/review">Reviews</a>
      <a href="/blog">Blog</a>
      <a href="/contact">Contact</a>
      <a href="/signup" class="appointment-btn"><i class="fas fa-calendar-check"></i> Appointment</a>
    </div>
  </div>
</nav>

<!-- Emergency Services Section -->
<section class="services-section">
  <div class="services-container">
    <!-- LEFT: Emergency Info -->
    <div class="services-left">
      <h2 class="section-title">Emergency Services</h2>
      <div class="services-grid">
        <% const emergencyServices = [
          { icon: "fa-truck-medical", title: "Rapid Ambulance", description: "Ambulances equipped with life-saving tools and trained paramedics for immediate response." },
          { icon: "fa-hospital-user", title: "Critical Care", description: "Advanced trauma and intensive care units available 24/7 for emergency cases." },
          { icon: "fa-phone-volume", title: "Emergency Helpline", description: "Dedicated helpline with quick support from trained personnel during crises." },
          { icon: "fa-syringe", title: "Immediate Treatment", description: "Swift diagnosis and treatment for injuries, strokes, heart attacks, and more." }
        ]; %>

        <% emergencyServices.forEach(service => { %>
          <div class="service-card">
            <div class="service-icon">
              <i class="fas <%= service.icon %>"></i>
            </div>
            <div class="service-content">
              <h3><%= service.title %></h3>
              <p><%= service.description %></p>
            </div>
          </div>
        <% }) %>
      </div>
    </div>

    <!-- RIGHT: Consultation Form (Unchanged) -->
    <div class="services-right">
      <div class="consultation-form">
        <h3 class="form-title">EMERGENCY</h3>
        <form method="POST" action="/emergency">
          <div class="form-group">
            <input type="text" name="Name" class="form-control" placeholder="Name" required>
          </div>
          <div class="form-group">
            <input type="number" name="phone" class="form-control" placeholder="Phone" required>
          </div>
         
        <div class="form-group">
            <select name="service" class="form-control" id="emergency-type" required>
              <option value="">Emergency Type</option>              
              <option value="checkup">Emergency Checkup</option>
              <option value="Home Emergency">Home Emergency</option>
              <option value="Ambulance">Ambulance</option>
              <option value="First-Aid">First-Aid</option>
            </select>
          </div>
          
          <!-- Address field - initially hidden -->
          <div class="form-group" id="address-field" >
            <input type="text" name="Address" class="form-control" placeholder="Address" id="address-input">
          </div>

          <button type="submit" class="submit-btn">BOOK APPOINTMENT</button>
        </form>
      </div>
    </div>
  </div>
</section>
<script>
// document.getElementById('emergency-type').addEventListener('change', function() {
//     const selected = this.value;
//     const addressField = document.getElementById('address-field');
//     const addressInput = document.getElementById('address-input');
    
//     if (selected === 'Home Emergency' || selected === 'Ambulance') {
//         // Show address field and make it required
//         addressField.style.display = 'block';
//         addressInput.setAttribute('required', 'required');
//     } else {
//         // Hide address field and make it not required
//         addressField.style.display = 'none';
//         addressInput.removeAttribute('required');
//     }
// });

document.addEventListener('DOMContentLoaded', function() {
    // Get reference to the select element
    const emergencyTypeSelect = document.getElementById('emergency-type');
    const addressField = document.getElementById('address-field');
    const addressInput = document.getElementById('address-input');
    
    // Add event listener to the select element
    emergencyTypeSelect.addEventListener('change', function() {
        const selected = this.value;
        console.log('Selected emergency type:', selected); // Debug output
        
        if (selected === 'Home Emergency' || selected === 'Ambulance') {
            // Show address field and make it required
            addressField.style.display = 'block';
            addressInput.setAttribute('required', 'required');
        } else {
            // Hide address field and make it not required
            addressField.style.display = 'none';
            addressInput.removeAttribute('required');
        }
    });
    
    // Trigger the change event on page load if a value is already selected
    if (emergencyTypeSelect.value) {
        emergencyTypeSelect.dispatchEvent(new Event('change'));
    }
});

// Add a direct check in case the above doesn't work
function checkEmergencyType() {
    const select = document.getElementById('emergency-type');
    const addressField = document.getElementById('address-field');
    const addressInput = document.getElementById('address-input');
    
    if (select.value === 'Home Emergency' || select.value === 'Ambulance') {
        addressField.style.display = 'block';
        addressInput.setAttribute('required', 'required');
    }
}

// Run on page load and also attach to the onchange event
window.onload = function() {
    checkEmergencyType();
    document.getElementById('emergency-type').onchange = checkEmergencyType;
};

</script>

</body>
</html>